# expect: unsat

# Example for exercizing `data`
# Here, 2*3 = 6

data nat :=
  | Z
  | S nat.

def plus (x y:nat) : nat :=
  match x with
  | Z -> y
  | S x2 -> S (plus x2 y)
  end.

val mult : nat -> nat -> nat.
rewrite forall x. mult Z x = Z.
rewrite forall x y. mult (S x) y = plus y (mult x y).

def two : nat := S (S Z).
def three : nat := S two.
def six : nat := S (S (S (S (S (S Z))))).

goal mult two three = six.


